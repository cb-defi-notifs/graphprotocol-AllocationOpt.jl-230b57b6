var documenterSearchIndex = {"docs":
[{"location":"usage/#Usage","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"usage/#ActionQueue","page":"Usage","title":"ActionQueue","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Set indexer-service flag --serve-network-subgraph to true so optimiser can pull data from the network subgraph at the indexer-service's network endpoint. If you would like to keep it false, you can instead supply an API url to indexer_service_network_url.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Download the allocationopt script. For example, using curl or wget. Make sure you use the raw file!\nMake the allocationopt script executable.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"$ chmod +x allocationopt","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Run the allocationopt script with the actionqueue option. If this doesn't work, check that the shebang in the allocationopt file points to your julia executable.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"$ ./scripts/allocationopt --help\n$ ./scripts/allocationopt actionqueue \"0x6ac85b9d834b51b14a7b0ed849bb5199e04c05c5\" test/example.csv 0.0 10 http://localhost:18000 http://localhost:7600/network","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"On Linux, you can further simplify the use of this script by symlinking it to your .local/bin","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"$ mkdir -p ~/.local/bin\n$ cd ~/.local/bin\n$ ln -s ~/projects/AllocationOpt.jl/scripts/allocationopt .  # Change to the path to the allocationopt script for you","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"You should now be able to run the allocationopt script from anywhere! Similarly to how you'd run ls.","category":"page"},{"location":"usage/#Indexer-Rules","page":"Usage","title":"Indexer Rules","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"If you don't have the action queue set up yet, you can also run the optimiser by telling it to generate indexing rules.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Download the allocationopt script. For example, using curl or wget. Make sure you use the raw file!\nMake the allocationopt script executable.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"$ chmod +x allocationopt","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Run the allocationopt script with the rules option. If this doesn't work, check that the shebang in the allocationopt file points to your julia executable.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"$ ./scripts/allocationopt --help\n$ ./scripts/allocationopt rules \"0x6ac85b9d834b51b14a7b0ed849bb5199e04c05c5\" test/example.csv 0.0 10 http://localhost:18000","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"On Linux, you can further simplify the use of this script by symlinking it to your .local/bin","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"$ mkdir -p ~/.local/bin\n$ cd ~/.local/bin\n$ ln -s ~/projects/AllocationOpt.jl/scripts/allocationopt .  # Change to the path to the allocationopt script for you","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"You should now be able to run the allocationopt script from anywhere! Similarly to how you'd run ls.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = AllocationOpt","category":"page"},{"location":"#AllocationOpt","page":"Home","title":"AllocationOpt","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for AllocationOpt.","category":"page"},{"location":"","page":"Home","title":"Home","text":"AllocationOpt is a library for optimising how an indexer should allocate its stake in The Graph Protocol.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Important: You must run this on a computer that supports 64-bit operations. 32-bit doesn't have enough precision to solve the optimisation problem.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Enter the julia repl. On linux machines, this is as simple as running the julia command from your terminal emulator. For MacOS, you'll need to add Julia to your path. See this StackOverflow post if you're having issues.\nAdd this package by adding the github url. First, enter package mode ]. Then, type add https://github.com/graphprotocol/AllocationOpt.jl. You'll also want to add the Comonicon package.","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add https://github.com/graphprotocol/AllocationOpt.jl/\npkg> add Comonicon","category":"page"},{"location":"#Public-API","page":"Home","title":"Public API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"We expose the following functions in our public API.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [AllocationOpt]","category":"page"},{"location":"#AllocationOpt.network_state-Union{Tuple{T}, Tuple{AbstractString, AbstractVector{T}, AbstractVector{T}, AbstractVector{T}, AbstractVector{T}, AbstractString}} where T<:AbstractString","page":"Home","title":"AllocationOpt.network_state","text":"function network_state(id, whitelist, blacklist, pinnedlist, frozenlist, indexer_service_network_url)\n\nArguments\n\nid::AbstractString: The id of the indexer to optimise.\nwhitelist::Vector{AbstractString}: Subgraph deployment IPFS hashes included in this list will be considered for, but not guaranteed allocation.\nblacklist::Vector{AbstractString}: Subgraph deployment IPFS hashes included in this list will not be considered, and will be suggested to close if there's an existing allocation.\npinnedlist::Vector{AbstractString}: Subgraph deployment IPFS hashes included in this list will be guaranteed allocation. Currently unsupported.\nfrozenlist::Vector{AbstractString}: Subgraph deployment IPFS hashes included in this list will not be considered during optimisation. Any allocations you have on these subgraphs deployments will remain.\nindexer_service_network_url::AbstractString: The URL that exposes the indexer service's network endpoint. Must begin with http. Example: http://localhost:7600/network.\n\n\n\n\n\n","category":"method"},{"location":"#AllocationOpt.optimize_indexer-Tuple{AllocationOpt.Indexer, AllocationOpt.Repository, Real, Integer}","page":"Home","title":"AllocationOpt.optimize_indexer","text":"function optimize_indexer(indexer, repo, minimum_allocation_amount, maximum_new_allocations)\n\nArguments\n\nindexer::Indexer: The indexer being optimised.\nrepo::Repository: Contains the current network state.\nminimum_allocation_amount::Real: The minimum amount of GRT that you are willing to allocate to a subgraph.\nmaximum_new_allocations::Integer: The maximum number of new allocations you would like the optimizer to open.\n\n```\n\n\n\n\n\n","category":"method"},{"location":"#AllocationOpt.push_allocations!-Union{Tuple{T}, Tuple{AbstractString, T, T, Dict{T, <:Real}, AbstractVector{T}, AbstractVector{T}, AbstractVector{T}, AbstractVector{T}}} where T<:AbstractString","page":"Home","title":"AllocationOpt.push_allocations!","text":"function push_allocations!(indexer_id, management_server_url, proposed_allocations, whitelist, blacklist, pinnedlist, frozenlist)\n\nArguments\n\nindexer_id::AbstractString: Indexer id\nmanagement_server_url::T: Indexer management server url, in format similar to http://localhost:18000\nproposed_allocations::Dict{T,<:Real}: The set of allocation to open returned by optimize_indexer\nwhitelist::AbstractVector{T}: Unused. Here for completeness.\nblacklist::AbstractVector{T}: Unused. Here for completeness.\npinnedlist::AbstractVector{T}: Unused. Here for completeness.\nfrozenlist::AbstractVector{T}: Make sure to not close these allocations as they are frozen.\n\n\n\n\n\n","category":"method"},{"location":"#AllocationOpt.read_filterlists-Tuple{AbstractString}","page":"Home","title":"AllocationOpt.read_filterlists","text":"function read_filterlists(filepath)\n\nArguments\n\nfilepath::AbstractString: A path to the CSV file that contains whitelist, blacklist, pinnedlist, frozenlist as columns.\n\n\n\n\n\n","category":"method"}]
}
