var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = AllocationOpt","category":"page"},{"location":"#AllocationOpt","page":"Home","title":"AllocationOpt","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for AllocationOpt.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [AllocationOpt]","category":"page"},{"location":"#AllocationOpt.optimize_indexer-Union{Tuple{T}, Tuple{AbstractString, AbstractVector{T}, AbstractVector{T}, AbstractVector{T}, AbstractVector{T}, Real, Real, Integer}} where T<:AbstractString","page":"Home","title":"AllocationOpt.optimize_indexer","text":"function optimize_indexer(id, whitelist, blacklist, pinnedlist, frozenlist, grtgas, minimum_allocation_amount, allocation_lifetime)\n\nArguments\n\nid::AbstractString: The id of the indexer to optimise.\nwhitelist::Vector{AbstractString}: Subgraph deployment IPFS hashes included in this list will be considered for, but not guaranteed allocation.\nblacklist::Vector{AbstractString}: Subgraph deployment IPFS hashes included in this list will not be considered, and will be suggested to close if there's an existing allocation.\npinnedlist::Vector{AbstractString}: Subgraph deployment IPFS hashes included in this list will be guaranteed allocation. Currently unsupported.\nfrozenlist::Vector{AbstractString}: Subgraph deployment IPFS hashes included in this list will not be considered during optimisation. Any allocations you have on these subgraphs deployments will remain.\ngrtgas::Real: The maximum amount of GRT that you are willing to spend on each allocation transaction.\nminimum_allocation_amount::Real: The minimum amount of GRT that you are willing to allocate to a subgraph.\nallocation_lifetime::Integer: The number of epoches you assume to open each allocations for. Lifetime 1 means you are reallocating every epoch. \n\nExamples\n\njulia> using AllocationOpt\njulia> optimize_indexer(\"0x6ac85b9d834b51b14a7b0ed849bb5199e04c05c5\", String[\"QmP4oSiQ7Wc4JTFk86m2JxGvR912NyBbxJnEdZawkYLTk4\"], String[], String[], String[], 0.0, 0.0, 1)\n1-element Vector{Tuple{String, Float64}}:\n (\"QmP4oSiQ7Wc4JTFk86m2JxGvR912NyBbxJnEdZawkYLTk4\", 5.539482411224138e6)\njulia> optimize_indexer(\"foo\", String[\"QmP4oSiQ7Wc4JTFk86m2JxGvR912NyBbxJnEdZawkYLTk4\"], String[], String[], String[], 0.0, 0.0, 1)\nERROR: AllocationOpt.UnknownIndexerError()\njulia> optimize_indexer(\"0x6ac85b9d834b51b14a7b0ed849bb5199e04c05c5\", String[\"foo\"], String[], String[], String[], 0.0, 0.0, 1)\nERROR: AllocationOpt.BadSubgraphIpfsHashError()\n\n\n\n\n\n","category":"method"},{"location":"#AllocationOpt.push_allocations!-Union{Tuple{T}, Tuple{AbstractString, T, Dict{T, <:Real}, AbstractVector{T}, AbstractVector{T}, AbstractVector{T}, AbstractVector{T}}} where T<:AbstractString","page":"Home","title":"AllocationOpt.push_allocations!","text":"function push_allocations!(indexer_id, management_server_url, proposed_allocations, whitelist, blacklist, pinnedlist, frozenlist)\n\nArguments\n\nindexer_id::AbstractString: Indexer id\nmanagement_server_url::T: Indexer management server url, in format similar to http://localhost:18000\nproposed_allocations::Dict{T,<:Real}: The set of allocation to open returned by optimize_indexer\nwhitelist::AbstractVector{T}: Unused. Here for completeness.\nblacklist::AbstractVector{T}: Unused. Here for completeness.\npinnedlist::AbstractVector{T}: Unused. Here for completeness.\nfrozenlist::AbstractVector{T}: Make sure to not close these allocations as they are frozen.\n\n\n\n\n\n","category":"method"},{"location":"#AllocationOpt.read_filterlists-Tuple{AbstractString}","page":"Home","title":"AllocationOpt.read_filterlists","text":"function read_filterlists(filepath)\n\nArguments\n\nfilepath::AbstractString: A path to the CSV file that contains whitelist, blacklist, pinnedlist, frozenlist as columns.\n\n\n\n\n\n","category":"method"}]
}
